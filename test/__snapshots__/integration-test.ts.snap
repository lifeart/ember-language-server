// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration API:Chain support addon ordering 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "dory": Array [
        "app/components/dory/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "a = undefined",
      "kind": 10,
      "label": "this.a_addon2__addon1__addon4__addon3_",
      "textEdit": Object {
        "newText": "this.a_addon2__addon1__addon4__addon3_",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to load API from project itself project custom completion:template 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "this.name",
      "textEdit": Object {
        "newText": "this.name",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide API:Completion support dummy addon completion:script 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "name",
    },
  ],
}
`;

exports[`integration Able to provide API:Completion support dummy addon completion:template 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "this.name",
      "textEdit": Object {
        "newText": "this.name",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide API:Definition support dummy addon definition:script 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.js",
    },
  ],
}
`;

exports[`integration Able to provide API:Definition support dummy addon definition:template 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration Able to provide API:Reference support dummy addon reference:template 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for angle component arguments names support template-only collocated components arguments extraction 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
      "my-bar": Array [
        "app/components/my-bar.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "@foo = undefined // (used in template)",
      "kind": 10,
      "label": "@foo",
      "textEdit": Object {
        "newText": "@foo",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "@name = undefined // (used in template)",
      "kind": 10,
      "label": "@name",
      "textEdit": Object {
        "newText": "@name",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "@picture = undefined // (used in template)",
      "kind": 10,
      "label": "@picture",
      "textEdit": Object {
        "newText": "@picture",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for local context access support child project addon calling parent project addon 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "bar": Array [
        "lib/foo/addon/templates/components/bar.hbs",
        "lib/foo/app/components/bar.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Foo$Bar",
      "textEdit": Object {
        "newText": "Foo$Bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 0,
          },
          "start": Object {
            "character": 1,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for local context access support collocated components 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for local context access support collocated components in mustache arguments 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 6,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 6,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for local context access support collocated components in node attributes 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 17,
            "line": 0,
          },
          "start": Object {
            "character": 12,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 17,
            "line": 0,
          },
          "start": Object {
            "character": 12,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for local scoped params support component name autocomplete from block params 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Foo",
      "textEdit": Object {
        "newText": "Foo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Param from <MyComponent as |...|>",
      "kind": 6,
      "label": "boo",
      "textEdit": Object {
        "newText": "boo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Param from {{#my-component as |...|}}",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for local scoped params support mustache blocks 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Param from {{#my-component as |...|}}",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration Able to provide autocomplete information for local scoped params support tag blocks 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Param from <MyComponent as |...|>",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration Able to use classes for API support dummy class-based addon definition:template 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration Able to use classes for API support dummy class-based addon definition:template with correctly binded context 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration Autocomplete works for broken templates autocomplete information for component #1 {{ 1`] = `
Array [
  Object {
    "detail": "component",
    "kind": 7,
    "label": "darling",
    "textEdit": Object {
      "newText": "darling",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "component",
    "kind": 7,
    "label": "hello",
    "textEdit": Object {
      "newText": "hello",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "input",
    "textEdit": Object {
      "newText": "input",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "link-to",
    "textEdit": Object {
      "newText": "link-to",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "textarea",
    "textEdit": Object {
      "newText": "textarea",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
]
`;

exports[`integration Autocomplete works for broken templates autocomplete information for component #1 {{ 2`] = `
Object {
  "component": Object {
    "darling": Array [
      "app/components/darling.hbs",
    ],
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
}
`;

exports[`integration Autocomplete works for broken templates autocomplete information for component #2 < 1`] = `
Array [
  Object {
    "detail": "component",
    "kind": 7,
    "label": "Darling",
    "textEdit": Object {
      "newText": "Darling",
      "range": Object {
        "end": Object {
          "character": 1,
          "line": 1,
        },
        "start": Object {
          "character": 1,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "component",
    "kind": 7,
    "label": "Hello",
    "textEdit": Object {
      "newText": "Hello",
      "range": Object {
        "end": Object {
          "character": 1,
          "line": 1,
        },
        "start": Object {
          "character": 1,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`integration Autocomplete works for broken templates autocomplete information for component #2 < 2`] = `
Object {
  "component": Object {
    "darling": Array [
      "app/components/darling.hbs",
    ],
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
}
`;

exports[`integration Autocomplete works for broken templates autocomplete information for component #3 {{# 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Ember 1.11.0",
      "kind": 3,
      "label": "component",
      "textEdit": Object {
        "newText": "component}}
  
{{/component}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
      "version": "1.11.0",
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "each",
      "textEdit": Object {
        "newText": "each}}
  
{{/each}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember 2.1.0",
      "kind": 3,
      "label": "each-in",
      "textEdit": Object {
        "newText": "each-in}}
  
{{/each-in}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
      "version": "2.1.0",
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "in-element",
      "textEdit": Object {
        "newText": "in-element}}
  
{{/in-element}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "let",
      "textEdit": Object {
        "newText": "let}}
  
{{/let}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "if",
      "textEdit": Object {
        "newText": "if}}
  
{{/if}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unless",
      "textEdit": Object {
        "newText": "unless}}
  
{{/unless}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "with",
      "textEdit": Object {
        "newText": "with}}
  
{{/with}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "darling",
      "textEdit": Object {
        "newText": "darling}}
  
{{/darling}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "hello",
      "textEdit": Object {
        "newText": "hello}}
  
{{/hello}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Autocomplete works for broken templates autocomplete information for helper #5 {{name ( 1`] = `
Array [
  Object {
    "detail": "helper",
    "kind": 3,
    "label": "boo",
    "textEdit": Object {
      "newText": "boo",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 1.11.0",
    "kind": 3,
    "label": "component",
    "textEdit": Object {
      "newText": "component",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.11.0",
  },
  Object {
    "detail": "Ember 1.13.0",
    "kind": 3,
    "label": "concat",
    "textEdit": Object {
      "newText": "concat",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.13.0",
  },
  Object {
    "detail": "Ember 2.1.0",
    "kind": 3,
    "label": "get",
    "textEdit": Object {
      "newText": "get",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "2.1.0",
  },
  Object {
    "detail": "Ember 3.12.0",
    "kind": 3,
    "label": "fn",
    "textEdit": Object {
      "newText": "fn",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "3.12.0",
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "hash",
    "textEdit": Object {
      "newText": "hash",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block",
    "textEdit": Object {
      "newText": "has-block",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "if",
    "textEdit": Object {
      "newText": "if",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "loc",
    "textEdit": Object {
      "newText": "loc",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "mut",
    "textEdit": Object {
      "newText": "mut",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "query-params",
    "textEdit": Object {
      "newText": "query-params",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unbound",
    "textEdit": Object {
      "newText": "unbound",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unless",
    "textEdit": Object {
      "newText": "unless",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
]
`;

exports[`integration Autocomplete works for broken templates autocomplete information for helper #5 {{name ( 2`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
  "helper": Object {
    "boo": Array [
      "app/helpers/boo.js",
    ],
  },
}
`;

exports[`integration Autocomplete works for broken templates autocomplete information for helper #6 {{name (foo ( 1`] = `
Array [
  Object {
    "detail": "helper",
    "kind": 3,
    "label": "boo",
    "textEdit": Object {
      "newText": "boo",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 1.11.0",
    "kind": 3,
    "label": "component",
    "textEdit": Object {
      "newText": "component",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.11.0",
  },
  Object {
    "detail": "Ember 1.13.0",
    "kind": 3,
    "label": "concat",
    "textEdit": Object {
      "newText": "concat",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.13.0",
  },
  Object {
    "detail": "Ember 2.1.0",
    "kind": 3,
    "label": "get",
    "textEdit": Object {
      "newText": "get",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "2.1.0",
  },
  Object {
    "detail": "Ember 3.12.0",
    "kind": 3,
    "label": "fn",
    "textEdit": Object {
      "newText": "fn",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "3.12.0",
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "hash",
    "textEdit": Object {
      "newText": "hash",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block",
    "textEdit": Object {
      "newText": "has-block",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "if",
    "textEdit": Object {
      "newText": "if",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "loc",
    "textEdit": Object {
      "newText": "loc",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "mut",
    "textEdit": Object {
      "newText": "mut",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "query-params",
    "textEdit": Object {
      "newText": "query-params",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unbound",
    "textEdit": Object {
      "newText": "unbound",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unless",
    "textEdit": Object {
      "newText": "unless",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
]
`;

exports[`integration Autocomplete works for broken templates autocomplete information for helper #6 {{name (foo ( 2`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
  "helper": Object {
    "boo": Array [
      "app/helpers/boo.js",
    ],
  },
}
`;

exports[`integration Autocomplete works for broken templates autocomplete information for modifier #4 <Foo {{ 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "modifier": Object {
      "boo": Array [
        "app/modifiers/boo.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "on",
      "textEdit": Object {
        "newText": "on",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
      "usableIn": Array [
        "ModifierPath",
      ],
    },
    Object {
      "detail": "modifier",
      "kind": 3,
      "label": "boo",
      "textEdit": Object {
        "newText": "boo",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "modifier",
      "kind": 2,
      "label": "action",
      "textEdit": Object {
        "newText": "action",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Autocomplete works in LinkTo components for @route argument able to autocomplete basic routes 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "routePath": Object {
      "foo.bar.baz": Array [
        "app/templates/foo/bar/baz.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "route",
      "kind": 17,
      "label": "foo.bar.baz",
      "textEdit": Object {
        "newText": "foo.bar.baz",
        "range": Object {
          "end": Object {
            "character": 16,
            "line": 0,
          },
          "start": Object {
            "character": 16,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Diffent commands handle "els.getRelatedFiles" command 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/component.js",
      "app/components/hello/template.hbs",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration Diffent commands handle "els.getRelatedFiles" command 2`] = `
Array [
  "app/components/hello/component.js",
  "app/components/hello/template.hbs",
  "tests/integration/components/hello-test.js",
]
`;

exports[`integration Diffent commands handle "els.getRelatedFiles" command with meta flag 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/index.hbs",
      "app/components/hello/index.js",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration Diffent commands handle "els.getRelatedFiles" command with meta flag 2`] = `
Array [
  Object {
    "meta": Object {
      "kind": "template",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "app/components/hello/index.hbs",
  },
  Object {
    "meta": Object {
      "kind": "script",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "app/components/hello/index.js",
  },
  Object {
    "meta": Object {
      "kind": "test",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "tests/integration/components/hello-test.js",
  },
]
`;

exports[`integration DocumentSymbolProvider able to provide symbols for script document 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration DocumentSymbolProvider able to provide symbols for template document 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration DocumentSymbolProvider stable if ast broken in script document 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration DocumentSymbolProvider stable if ast broken in template document 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration GlimmerNative able to provide glimmer-native component 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Hello",
      "textEdit": Object {
        "newText": "Hello",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 0,
          },
          "start": Object {
            "character": 1,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Button",
      "textEdit": Object {
        "newText": "Button",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 0,
          },
          "start": Object {
            "character": 1,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "ListView",
      "textEdit": Object {
        "newText": "ListView",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 0,
          },
          "start": Object {
            "character": 1,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration GlimmerX able to provide list of locally defined components 1`] = `
Object {
  "registry": Object {},
  "response": Array [
    Object {
      "detail": "component",
      "kind": 7,
      "label": "App",
      "textEdit": Object {
        "newText": "App",
        "range": Object {
          "end": Object {
            "character": 20,
            "line": 1,
          },
          "start": Object {
            "character": 20,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Button",
      "textEdit": Object {
        "newText": "Button",
        "range": Object {
          "end": Object {
            "character": 20,
            "line": 1,
          },
          "start": Object {
            "character": 20,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Ball",
      "textEdit": Object {
        "newText": "Ball",
        "range": Object {
          "end": Object {
            "character": 20,
            "line": 1,
          },
          "start": Object {
            "character": 20,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Border",
      "textEdit": Object {
        "newText": "Border",
        "range": Object {
          "end": Object {
            "character": 20,
            "line": 1,
          },
          "start": Object {
            "character": 20,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Bus",
      "textEdit": Object {
        "newText": "Bus",
        "range": Object {
          "end": Object {
            "character": 20,
            "line": 1,
          },
          "start": Object {
            "character": 20,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Table",
      "textEdit": Object {
        "newText": "Table",
        "range": Object {
          "end": Object {
            "character": 20,
            "line": 1,
          },
          "start": Object {
            "character": 20,
            "line": 1,
          },
        },
      },
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases go to component from typescripted inline template 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/templates/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.ts",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/components/darling.hbs",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases go to definition from handlebars template working if we have test for component 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.ts",
        "tests/integration/components/darling/component-test.js",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.ts",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases go to definition from script template working if we have test for component 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.ts",
        "tests/integration/components/darling/component-test.js",
      ],
      "hello": Array [
        "app/components/hello.ts",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.ts",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases go to local template-only component 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.hbs",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases go to local template-only component in module 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/index.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling/index.hbs",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases go to local template-only component in pod-like 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/template.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling/template.hbs",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases go to local template-only component in templates dir 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/templates/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/components/darling.hbs",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases to children route from application outlet 1`] = `
Object {
  "registry": Object {
    "routePath": Object {
      "application": Array [
        "app/templates/application.hbs",
      ],
      "foo": Array [
        "app/templates/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo.hbs",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases to children route from meaningful outlet 1`] = `
Object {
  "registry": Object {
    "routePath": Object {
      "foo": Array [
        "app/templates/foo.hbs",
      ],
      "foo.bar": Array [
        "app/templates/foo/bar.hbs",
      ],
      "foo.baz": Array [
        "app/templates/foo/baz.hbs",
      ],
      "foo.boo.bax": Array [
        "app/templates/foo/boo/bax.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/bar.hbs",
    },
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/baz.hbs",
    },
  ],
}
`;

exports[`integration Go to definition works for all supported cases to to route defintion from LinkTo component 1`] = `
Object {
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "routePath": Object {
      "foo.bar.baz": Array [
        "app/templates/foo/bar/baz.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/bar/baz.hbs",
    },
  ],
}
`;

exports[`integration Initialize request returns an initialize request 1`] = `
Object {
  "capabilities": Object {
    "codeActionProvider": true,
    "completionProvider": Object {
      "resolveProvider": true,
      "triggerCharacters": Array [
        ".",
        "::",
        "=",
        "/",
        "{{",
        "(",
        "<",
        "@",
        "this.",
        "<:",
      ],
    },
    "definitionProvider": true,
    "documentSymbolProvider": true,
    "executeCommandProvider": Object {
      "commands": Array [
        "els.registerProjectPath",
        "els.provideDiagnostics",
        "els.extractSourceCodeToComponent",
        "els.executeInEmberCLI",
        "els.getRelatedFiles",
        "els.getKindUsages",
        "els.setConfig",
        "els.reloadProject",
      ],
    },
    "referencesProvider": true,
    "textDocumentSync": 1,
    "workspace": Object {
      "workspaceFolders": Object {
        "changeNotifications": true,
        "supported": true,
      },
    },
  },
  "serverInfo": Object {
    "name": "@lifeart/ember-language-server",
  },
}
`;

exports[`integration autocomplete works for angle component slots 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration autocomplete works for multiple angle component slots 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":body",
    "textEdit": Object {
      "newText": ":body",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":footer",
    "textEdit": Object {
      "newText": ":footer",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;
